/*
 * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License").
 * You may not use this file except in compliance with the License.
 * A copy of the License is located at
 *
 *     http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

package com.amazon.aace.amazonlite.config;

import com.amazon.aace.core.config.EngineConfiguration;

/**
 * The @c AmazonLiteConfiguration class is a factory interface for creating configuration objects.
 */
public class AmazonLiteConfiguration {

    private static final String TAG = "AmazonLiteConfiguration";

    public static class ModelConfig {
        private String mLocale;
        private String mPath;

        public ModelConfig( String locale, String path ) {
            mLocale = locale;
            mPath = path;
        }

        public String getLocale() { return mLocale; }
        public String getPath() { return mPath; }
    }

    /**
    * Factory method used to programmatically generate AmazonLite configuration data.
    * The data generated by this method is equivalent to providing the following @c JSON
    * values in a configuration file:
    *
    * @code    {.json}
    * {
    *      "aace.amazonLite" : {
    *          "rootPath" : "Path where all the model files (and other assets) are stored"
    *          "models" : [
    *              {
    *                  "locale" : "locale",
    *                  "path" : "relative path to the locale Model file"
    *              }
    *          ]
    *      }
    * }
    * @endcode
    *
    * @param rootPath The path where all the assets are stored.
    * @param modelList The list of locale and their corresponding model filenames.
    */
    public static EngineConfiguration createAmazonLiteConfig( final String rootPath, final ModelConfig[] modelList ) {
        return new EngineConfiguration() {
            @Override
            protected long createNativeRef() {
                return createAmazonLiteConfigBinder( rootPath, modelList );
            }
        };
    }

    // Native Engine JNI methods
    static private native long createAmazonLiteConfigBinder( String rootPath,  ModelConfig[] modelList );
}

