/*
 * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License").
 * You may not use this file except in compliance with the License.
 * A copy of the License is located at
 *
 *     http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

#ifndef AACE_AMAZONLITE_AMAZONLITE_CONFIGURATION_H
#define AACE_AMAZONLITE_AMAZONLITE_CONFIGURATION_H

#include "AACE/Core/EngineConfiguration.h"

namespace aace {
namespace amazonLite {
namespace config {

/**
 * The @c AmazonLiteConfiguration class is a factory interface for creating configuration objects.
 */
class AmazonLiteConfiguration {

public:
    /**
     * Identifies a locale and relative path pair for AmazonLite configuration.
     */
    using ModelConfig = std::pair<std::string, std::string>;
    /**
     * Factory method used to programmatically generate AmazonLite configuration data.
     * The data generated by this method is equivalent to providing the following @c JSON
     * values in a configuration file:
     *
     * @code {.json}
     * {
     *      "aace.amazonLite" : {
     *          "rootPath" : "Top level file system path where the model files (and other assets) are stored"
     *          "models" : [
     *              {
     *                  "locale" : "locale",
     *                  "path" : "relative path to the locale Model file"
     *              }
     *          ]
     *      }
     * }
     * @endcode
     *
     * @param [in] rootPath  Top level path where all the assets are stored.
     * @param [in] modelList The list of locale and their corresponding model filenames.
     * @return Configuration object.
     */

    static std::shared_ptr<aace::core::config::EngineConfiguration> createAmazonLiteConfig( const std::string& rootPath, const std::vector<ModelConfig>& modelList );

};

} // aace::engine::amazonLite
} // aace::engine
} // aace

#endif // AACE_AMAZONLITE_AMAZONLITE_CONFIGURATION_H